{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "DeviceDiagnostics API", 
        "class": "DeviceDiagnostics", 
        "description": "The `DeviceDiagnostics` plugin provides an interface for the WebPA service for this device only. It allows you to get device configurations."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "audioDecoderStatus":{
            "summary": "The status",
            "enum": [
                "ACTIVE",
                "PAUSED",
                "IDLE"
            ],
            "type": "string",
            "example": "ACTIVE"
        },
        "AVDecoderStatus":{
            "summary": "The status. If AV decoder status is not supported, the default state will always be IDLE.",
            "enum": [
                "ACTIVE",
                "PAUSED",
                "IDLE"
            ],
            "type": "string",
            "example": "ACTIVE"
        }
    },
    "methods": {
        "getConfiguration": {
            "summary": "Gets the values associated with the corresponding property names.",
            "params": {
                "type": "object",
                "properties": {
                    "names": {
                        "summary": "String array of property names",
                        "type": "array",
                        "items": {
                            "summary": "Property names as represented in the data model like `Device.X_CISCO_COM_LED.RedPwm`, `Device.DeviceInfo.Manufacturer`, `Device.DeviceInfo.UpTime`, `Device.DeviceInfo.ProcessStatus.CPUUsage`, etc",
                            "type":"string",
                            "example": "Device.X_CISCO_COM_LED.RedPwm"
                        }
                    }
                },
                "required": [
                    "names"
                ]
            },
            "result": {
                "type": "object",
                "properties": {
                    "paramList": {
                        "summary": "An array of JSON objects with the specified properties and their values",
                        "type":"array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "summary": "The property name; Empty, if the property name is not supported",
                                    "type":"string",
                                    "example": "Device.X_CISCO_COM_LED.RedPwm"
                                },
                                "value": {
                                    "summary": "The property value; Empty, if the property name is not supported",
                                    "type":"string",
                                    "example": "123"
                                }
                            },
                            "required": [
                                "name",
                                "value"
                            ]
                        }
                    },
                    "success": {
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "paramList",
                    "success"
                ]
            }
        },
	"getMilestones": {
            "summary": "Returns the list of milestones.",
            "result": {
                "type": "object",
                "properties": {
                    "milestones": {
                        "summary": "A string [] of milestones",
                        "type": "array",
                        "items": {
                            "type":"string",
                            "example": "2020 Jan 28 08:24:06.762355 abcdpq1 systemd[1]: Starting Log RDK Started Service..."
                        }
                    },
                    "success":{
                        "$ref": "#/common/success"
                    }
                },
                "required": [
                    "milestones",
                    "success"
                ]
            }
        },
	    "logMilestone": {
              "summary": "Log marker string to rdk milestones log.",
              "params": {
                  "type":"object",
                  "properties": {
                      "marker": {
                          "summary": "Milestone marker string",
                          "type": "string"
                      }
                  },
                  "required": [
                      "marker"
                  ]
              },
	      "result": {
                  "$ref": "#/common/results/void"
              },
	      "errors": [
                {
                    "description": "General error",
                    "$ref": "#/common/errors/general"
                }
            ]
        },
        "getAVDecoderStatus":{
            "summary": "Gets the most active status of audio/video decoder/pipeline. This API doesn't track individual pipelines. It will aggregate and report the pipeline status, and the pipeline states are prioritized from High to Low (`ACTIVE`, `PAUSED`, and `IDLE`). Therefore, if any of the pipelines is in active state, then `getAVDecoderStatus` will return `ACTIVE`. If none of the pipelines are active but one is in a paused state, then `getAVDecoderStatus` will return `PAUSED`, and if all the pipelines are idle only then, `IDLE` will be returned.",
            "result":{
                "type":"object",
                "properties": {
                    "avDecoderStatus": {
                        "$ref": "#/definitions/AVDecoderStatus"
                    }
                },
                "required": [
                    "avDecoderStatus"
                ]
            }
        }
    },
    "events": {
        "onAVDecoderStatusChanged":{
            "summary": "Triggered when the most active status of audio/video decoder/pipeline changes.",
            "params": {
                "type": "object",
                "properties": {
                    "avDecoderStatusChange": {
                        "$ref": "#/definitions/AVDecoderStatus"
                    }
                },
                "required": [
                    "avDecoderStatusChange"
                ]
            }
        }
    }
}
