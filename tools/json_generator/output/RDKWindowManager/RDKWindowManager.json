{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "RDKWindowManager API", 
        "class": "RDKWindowManager",
        "description": "The `RDKWindowManager` plugin controls the management of composition, layout, Z order, and key handling."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "intercept":{
            "summary":"A JSON String containing client, callSign (optional), keyCode and modifiers (optional)",
            "type": "string",
            "example": "{\\\"client\\\":\\\"org.rdk.Netflix\\\",\\\"keyCode\\\":37,\\\"modifiers\\\":[\\\"shift\\\"]}"
        },
        "intercepts":{
            "summary":"A JSON String containing client, callSign (optional), keyCode and modifiers (optional)",
            "type": "string",
            "example": "{\\\"intercepts\\\":[{\\\"keys\\\":[{\\\"keyCode\\\": 37,\\\"modifiers\\\":[\\\"ctrl\\\",\\\"alt\\\"]},{\\\"keyCode\\\": 38,\\\"modifiers\\\":[\\\"shift\\\"]}],\\\"client\\\":\\\"org.rdk.Netflix\\\"}]}"
        },
        "keyListeners":{
            "summary":"A JSON String containing keys(keyCode, nativekeyCode (optional), modifiers (optional), activate, propagate), client, callSign (optional)",
            "type": "string",
            "example": "{\\\"keys\\\":[{\\\"keyCode\\\":37,\\\"modifiers\\\":[\\\"shift\\\"],\\\"activate\\\":false,\\\"propagate\\\":true}],\\\"client\\\":\\\"org.rdk.Netflix\\\"}"
        },
        "removeKeyListeners":{
            "summary":"A JSON String containing keys(keyCode, nativekeyCode (optional), modifiers (optional), activate, propagate), client, callSign (optional)",
            "type": "string",
            "example": "{\\\"keys\\\":[{\\\"keyCode\\\":37,\\\"modifiers\\\":[\\\"ctrl\\\",\\\"alt\\\"]},{\\\"keyCode\\\":38,\\\"modifiers\\\":[\\\"ctrl\\\",\\\"alt\\\"]}],\\\"client\\\":\\\"org.rdk.Netflix\\\"}"
        },
        "displayParams":{
            "summary":"A JSON String containing client, callSign (optional), displayName, displayWidth, displayHeight, virtualDisplay, virtualWidth, virtualHeight, topmost (optional), focus (optional)",
            "type": "string",
            "example": "{\\\"client\\\":\\\"org.rdk.Netflix\\\",\\\"callsign\\\":\\\"org.rdk.Netflix\\\",\\\"displayName\\\":\\\"test\\\",\\\"displayWidth\\\":1920,\\\"displayHeight\\\":1080,\\\"virtualDisplay\\\":true,\\\"virtualWidth\\\":1920,\\\"virtualHeight\\\":1080,\\\"topmost\\\":false,\\\"focus\\\":false}"
        },
        "keyCode":{
            "summary":"The key code of the key to intercept (only symbol * (string data type) is acceptable)",
            "type": "number",
            "example": 37
        },
        "keys": {
            "summary": "A JSON String containing keyCode, modifiers (optional), delay",
            "type": "string",
            "example": "{\\\"keys\\\": [{\\\"keyCode\\\":37,\\\"modifiers\\\":[\\\"shift\\\"],\\\"delay\\\":1}]}"
        },
        "keyConfig": {
            "summary": "A JSON String containing enabled, initialDelay (in milli seconds) and repeatInterval (in milli seconds)",
            "type": "string",
            "example": "{\\\"enabled\\\":true,\\\"initialDelay\\\":500,\\\"repeatInterval\\\":100}"
        },
        "modifiers":{
            "summary": "A JSON String containing one or more modifiers (`ctrl`, `alt`, and `shift` are supported)",
            "type": "string",
            "example": "{\\\"modifiers\\\":[\\\"ctrl\\\",\\\"alt\\\"]}"
        },
        "client":{
            "summary":"The client name",
            "type": "string",
            "example": "org.rdk.Netflix"
        },
        "clients": {
            "summary": "A JSON String containing one or more clients",
            "type": "string",
            "example": "{\\\"clients\\\":[\\\"org.rdk.Netflix\\\"]}"
        },
        "result": {
            "type": "null",
            "default": null,
            "description": "null on success"
        },
        "callsign": {
            "summary": "The application callsign",
            "type": "string",
            "example": "Cobalt"
        },
        "x":{
            "summary":"The x location",
            "type": "number",
            "example": 0
        },
        "y":{
            "summary":"The y location",
            "type": "number",
            "example": 0
        },
        "w":{
            "summary":"The width",
            "type": "number",
            "example": 1920
        },
        "h":{
            "summary":"The height",
            "type": "number",
            "example": 1080
        },
        "sx":{
            "summary":"The x scale factor",
            "type": "number",
            "example": 0.5
        },
        "sy":{
            "summary":"The y scale factor",
            "type": "number",
            "example": 0.5
        },
        "opacity": {
            "summary": "The opacity level (between 0 and 100)",
            "type": "integer",
            "example": 100
        },
        "uri":{
            "summary": "The URI of the app (empty, if unable to get URI status)",
            "type":"string",
            "example": "https://..."
        },
        "visible":{
            "summary": "Whether the client is visible (`true`) or not (`false`)",
            "type": "boolean",
            "example": true
        },
        "displayName": {
            "summary": "A name for the display",
            "type": "string",
            "example": "test"
        },
        "holePunch":{
            "summary": "Whether hole punching is enabled (`true`) or disabled (`false`)",
            "type": "boolean",
            "example": true
        },
        "logLevel": {
            "summary": "The log level",
            "enum": [
                "DEBUG",
                "INFO",
                "WARN",
                "ERROR",
                "FATAL"
            ],
            "type":"string",
            "example": "INFO"
        },
        "ram":{
            "summary": "The amount of free memory remaining in Kilobytes",
            "type": "integer",
            "example": 65536 
        },
        "width":{
            "summary": "The cursor width",
            "type": "number",
            "example": 255
            
        },
        "height":{
            "summary": "The cursor height",
            "type": "number",
            "example": 255
        },
        "framerate":{
            "summary":"display the current Graphics framerate",
            "type":"number",
            "example":40
        },
        "appIds": {
            "summary": "A JSON String containing one or more application IDs",
            "type": "string",
            "example": "{\\\"appIds\\\":[\\\"org.rdk.Netflix\\\"]}"
        },
        "visible": {
              "summary": "Whether the client is visible (`true`) or not (`false`)",
              "type": "boolean",
              "example": true
        },
        "appInstanceId": {
            "summary": "The application instance ID for an app.",
            "type": "string",
            "example": "rdkwmtestapp_13193"
        },
        "zOrder": {
            "summary": "The desired z-order value (integer).",
            "type": "integer",
            "example": 5
        }
    },
    "methods": {
        "addKeyIntercept":{
            "summary": "Adds a key intercept to the client application specified. The keys are specified by a key code and a set of modifiers. Regardless of the application that has focus, key presses that match the key code and modifiers will be sent to the client application.",
            "params": {
                "type":"object",
                "properties": {
                    "intercept":{
                        "$ref": "#/definitions/intercept"
                    }
                },
                "required": [
                    "intercept"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "addKeyIntercepts":{
            "summary": "Adds the list of key intercepts.",
            "params": {
                "type":"object",
                "properties": {
                    "intercepts":{
                        "$ref": "#/definitions/intercepts"
                    }
                },
                "required": [
                    "intercepts"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "addKeyListener":{
            "summary": "Adds a key listener to an application. The keys are bubbled up based on their z-order.",
            "params": {
                "type":"object",
                "properties": {
                    "keyListeners":{
                        "$ref": "#/definitions/keyListeners"
                    }
                },
                "required": [
                    "keyListeners"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "createDisplay": {
            "summary": " Creates a display for the specified client using the configuration parameters.",
            "params": {
                "type":"object",
                "properties": {
                    "displayParams":{
                        "$ref": "#/definitions/displayParams"
                    }
                },
                "required": [
                    "displayParams"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "enableInactivityReporting":{
            "summary": "Enables or disables inactivity reporting and events.",
            "params": {
                "type": "object",
                "properties": {
                    "enable": {
                        "summary": "Whether to enable (`true`) or disable (`false`) inactivity reporting",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "enable"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "enableInputEvents": {
            "summary": "Enables KeyInputEvents for list of clients specified.",
            "params": {
                "type": "object",
                "properties": {
                    "clients": {
                        "$ref": "#/definitions/clients"
                    },
                    "enable": {
                        "summary": "enable:Flag to enable input events",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "clients",
                    "enable"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "enableKeyRepeats": {
            "summary": "Enables or disables key repeats.",
            "params": {
                "type": "object",
                "properties": {
                    "enable": {
                        "summary": "Whether to enable (`true`) or disable (`false`) key repeats",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "enable"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "generateKey": {
            "summary": "Triggers the key events (key press and release).",
            "params": {
                "type":"object",
                "properties": {
                    "keys":{
                        "$ref": "#/definitions/keys"
                    },
                    "client":{
                        "$ref": "#/definitions/client"
                    }
                },
                "required": [
                    "keys"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "getApps": {
            "summary": "Gets a list of active application IDs.",
            "result": {
                "$ref": "#/definitions/appIds"
            }
        },
        "getKeyRepeatsEnabled": {
            "summary": "Returns whether key repeating is enabled or disabled.",
            "result": {
                "type": "object",
                "properties": {
                    "keyRepeat": {
                        "summary": "`true` if enabled, otherwise `false`",
                        "type":"boolean",
                        "example": true
                    }
                },
                "required": [
                    "keyRepeat"
                ]
            }
        },
        "ignoreKeyInputs": {
            "summary": "Blocks user key inputs",
            "params": {
                "type": "object",
                "properties": {
                    "ignore": {
                        "summary": "Whether key inputs are ignored",
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "ignore"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "injectKey": {
            "summary": "Injects the keys.",
            "params": {
                "type":"object",
                "properties": {
                    "keycode": {
                        "$ref": "#/definitions/keyCode"
                    },
                    "modifiers": {
                        "$ref": "#/definitions/modifiers"
                    } 
                },
                "required": [
                    "keycode"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "keyRepeatConfig": {
            "summary": "Configuration for keyrepeat.",
            "params": {
                "type": "object",
                "properties": {
                    "input": {
                        "summary": "Input type (default/keyboard)",
                        "type": "string",
                         "example": "default"
                    },
                    "keyConfig": {
                        "$ref": "#/definitions/keyConfig"
                    }
                },
                "required": [
                    "input",
                    "keyConfig"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "removeKeyIntercept": {
            "summary": "Removes a key intercept.",
            "params": {
                "type":"object",
                "properties": {
                    "intercept":{
                        "$ref": "#/definitions/intercept"
                    }
                },
                "required": [
                    "intercept"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "removeKeyListener": {
            "summary": "Removes a key listener for an application.",
            "params": {
                "type":"object",
                "properties": {
                    "keyListeners":{
                        "$ref": "#/definitions/removeKeyListeners"
                    }
                },
                "required": [
                    "keyListeners"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "resetInactivityTime":{
            "summary": "Resets the inactivity notification interval.",
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setInactivityInterval": {
            "summary": "Sets the inactivity notification interval.",
            "events": {
                "onUserInactivity" : "Triggers only if the device is inactive for the specified time interval"
            },
            "params": {
                "type":"object",
                "properties": {
                    "interval": {
                        "summary": "The inactivity event interval in minutes",
                        "type": "integer",
                        "example": 15
                    }
                },
                "required": [
                    "interval"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setFocus": {
            "summary": "Sets the focus to the specified app by app ID.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setVisible": {
            "summary": "Sets the visibility of the specified client or application instance ID.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    },
                    "visible": {
                        "$ref": "#/definitions/visible"
                    }
                },
                "required": [
                    "appInstanceId",
                    "visible"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "renderReady": {
            "summary": "Returns whether the specified application has rendered its first frame.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            },
            "result": {
                "type": "object",
                "properties": {
                    "status": {
                        "summary": "Returns true if the application has rendered its first frame, false if it has not.",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "status"
                ]
            }
        },
        "enableDisplayRender": {
            "summary": "Enables or disables the rendering of a Wayland display for the specified client or application instance.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    },
                    "enable": {
                        "summary": "Boolean flag to enable (`true`) or disable (`false`) the Wayland display render.",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "appInstanceId",
                    "enable"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "setZOrder": {
            "summary": "Sets the z-order of the specified app.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    },
                    "zOrder": {
                        "$ref": "#/definitions/zOrder"
                    }
                },
                "required": [
                    "appInstanceId",
                    "zOrder"
                ]
            },
            "result": {
                "$ref": "#/definitions/result"
            }
        },
        "getZOrder": {
            "summary": "Returns the z-order of the specified app.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            },
            "result": {
                "type": "object",
                "properties": {
                    "zOrder": {
                        "$ref": "#/definitions/zOrder"
                    }
                },
                "required": [
                    "zOrder"
                ]
            }
        }
    },
    "events": {
        "onUserInactivity": {
            "summary": "Triggered when a device has been inactive for a period of time. This event is broadcasted at the frequency specified by `setInactivityInterval` if the device is not active. The default frequency is 15 minutes.",
            "params": {
                "type": "object",
                "properties": {
                    "minutes":{
                        "summary": "The number of minutes that the device has been inactive",
                        "type": "number",
                        "example": 5
                    }
                },
                "required": [
                    "minutes"
                ]
            }
        },
        "onDisconnected": {
            "summary": "Triggered when an app is disconnected from a Wayland display.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                 },
                 "required": [
                     "appInstanceId"
                 ]
             }
        },
        "onReady": {
            "summary": "Triggered when an app has made its first graphics visible on a Wayland display.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            }
        },
        "onConnected": {
            "summary": "Triggered when an app is connected to a Wayland display.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            }
        },
        "onVisible": {
            "summary": "Sent when the app becomes visible.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            }
        },
        "onHidden": {
            "summary": "Sent when the app becomes visible.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            }
        },
        "onFocus": {
            "summary": "Sent when the app receives focus.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            }
        },
        "onBlur": {
            "summary": "Sent when the app removes focus.",
            "params": {
                "type": "object",
                "properties": {
                    "appInstanceId": {
                        "$ref": "#/definitions/appInstanceId"
                    }
                },
                "required": [
                    "appInstanceId"
                ]
            }
        }
    }
}
