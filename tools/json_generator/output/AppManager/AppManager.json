{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/entservices-apis/refs/heads/main/tools/md_generator/json2md/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "AppManager API",
        "class": "org.rdk.AppManager",
        "description": "The `AppManager` that is responsible for providing the Resident App APIs for running and managing applications, and notifying listeners of any app lifecycle events or state changes."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "appId": {
            "type": "string",
            "description": "The unique identifier of the application to check.",
            "example": "YouTube"
        },
        "appInstanceId": {
            "type": "string",
            "description": "Instance identifier of the application",
            "example": "80df148e-b52e-4c0f-8964-0de4c090426f"
        },
        "activeSessionId": {
            "type": "string",
            "description": "Active session identifier",
            "example": ""
        },
        "appType": {
            "type": "integer",
            "description": "Application type",
            "example": 1
        },
        "lifecycleState": {
            "type": "integer",
            "description": "Current lifecycle state of the application",
            "example": 0
        },
        "targetLifecycleState": {
            "type": "integer",
            "description": "Target lifecycle state of the application",
            "example": 2
        },
        "intent": {
            "type": "string",
            "description": "Specifies the intent or message to be executed.",
            "example": "start"
        },
        "launchArgs": {
            "type": "string",
            "description": "Additional parameters passed to the application.",
            "example": "{}"
        },
        "versionString": {
            "type": "string",
            "description": "The version number of the application in string format.",
            "example": "2.3.9"
        },
        "installedApps": {
            "type": "array",
            "description": "List of installed applications (returned as a JSON string in actual API, shown here as parsed for clarity).",
            "items": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "versionString": { "$ref": "#/definitions/versionString" },
                    "type": {
                        "type": "string",
                        "default": "APPLICATION_TYPE_INTERACTIVE"
                    },
                    "lastActiveTime": {
                        "type": "string",
                        "default": ""
                    },
                    "lastActiveIndex": {
                        "type": "string",
                        "default": ""
                    }
                },
                "required": [
                    "appId",
                    "versionString",
                    "type"
                ]
            }
        },
        "loadedApp": {
            "type": "object",
            "description": "Details of a loaded application",
            "properties": {
                "appId": { "$ref": "#/definitions/appId" },
                "type": { "$ref": "#/definitions/appType" },
                "lifecycleState": { "$ref": "#/definitions/lifecycleState" },
                "targetLifecycleState": { "$ref": "#/definitions/targetLifecycleState" },
                "activeSessionId": { "$ref": "#/definitions/activeSessionId" },
                "appInstanceId": { "$ref": "#/definitions/appInstanceId" }
            },
            "required": [
                "appId",
                "type",
                "lifecycleState",
                "targetLifecycleState",
                "activeSessionId",
                "appInstanceId"
            ]
        },
        "propertyKey": {
          "summary": "The name of the property to get or set.",
          "type": "string",
          "example": "delay"
        },
        "propertyValue": {
          "summary": "The property value to set, can be boolean, number, string or object.",
          "type": "string",
          "example": "10"
        },
        "metaData": {
          "summary": "the name of the meta-data to retrieve",
          "type": "string",
          "example": "xyz"
        },
        "AppLifecycleState": {
          "summary": "Possible lifecycle states of an application",
          "type": "string",
          "enum": [
                "APP_STATE_UNKNOWN",
                "APP_STATE_UNLOADED",
                "APP_STATE_LOADING",
                "APP_STATE_INITIALIZING",
                "APP_STATE_PAUSED",
                "APP_STATE_RUNNING",
                "APP_STATE_ACTIVE",
                "APP_STATE_SUSPENDED",
                "APP_STATE_HIBERNATED",
                "APP_STATE_TERMINATING"
            ]
        },
        "AppErrorReason": {
          "summary": "Possible error reasons during app lifecycle state transitions",
          "type": "string",
          "enum": [
                "APP_ERROR_NONE",
                "APP_ERROR_UNKNOWN",
                "APP_ERROR_STATE_TIMEOUT",
                "APP_ERROR_ABORT"
            ]
        }
    },
    "methods": {
        "getInstalledApps": {
            "summary": "Function fetches the details of all applications currently installed.",
            "result": {
                "$ref": "#/definitions/installedApps"
            }
        },
        "isInstalled": {
            "summary": "Check whether a specific application is installed on the system.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": {
                        "$ref": "#/definitions/appId"
                    }
                },
                "required": [
                    "appId"
                ]
            },
            "result": {
                "type": "boolean",
                "description": "Returns true if the application is installed, false otherwise.",
                "example": true
            }
        },
        "getLoadedApps": {
            "summary": "Retrieves a list of applications currently loaded on the system.",
            "result": {
                "type": "array",
                "description": "List of loaded applications",
                "items": {
                    "$ref": "#/definitions/loadedApp"
                }
            }
        },
        "launchApp": {
            "summary": "Launch an Application and app will be in ACTIVE state.",
            "events": {
               "OnAppLaunchRequest" : "Triggered whenever there is a request for App Launch."
            },
            "params": {
                "type": "object",
                "properties": {
                    "appId": {
                        "$ref": "#/definitions/appId"
                    },
                    "intent": {
                        "$ref": "#/definitions/intent"
                    },
                    "launchArgs": {
                        "$ref": "#/definitions/launchArgs"
                    }
                },
                "required": [
                    "appId"
                ]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "preloadApp": {
            "summary": "Preloads an Application.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "launchArgs": { "$ref": "#/definitions/launchArgs" }
                },
                "required": [ "appId" ]
            },
            "result": {
                "description": "Returns an empty string on success or an error message if preload failed.",
                "type": "string",
                "example": ""
            }
        },
        "closeApp": {
            "summary": "closeApp moves the state from ACTIVE to PAUSED state, then transitions it to SUSPENDED, HIBERNATED, or UNLOADED based on system policies.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" }
                },
                "required": ["appId"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "terminateApp": {
            "summary": "terminateApp terminates an Application gracefully",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" }
                },
                "required": ["appId"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "startSystemApp": {
            "summary": "startSystemApp starts the system Application ",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" }
                },
                "required": ["appId"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "stopSystemApp": {
            "summary": "stopSystemApp stops the system Application ",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" }
                },
                "required": ["appId"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "killApp": {
            "summary": "killApp kills an application forcefully",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" }
                },
                "required": ["appId"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "sendIntent": {
            "summary": "Sends an intent to a loaded app.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "intent": { "$ref": "#/definitions/intent" }
                },
                "required": ["appId", "intent"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "clearAppData": {
            "summary": "Clears all persistent data for a given appId.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" }
                },
                "required": ["appId"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "clearAllAppData": {
            "summary": "Clears all persistent data for all apps.",
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "getAppMetadata": {
            "summary": "Retrieves meta data about an installed app",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "metaData": { "$ref": "#/definitions/metaData" }
                },
                "required": ["appId", "metaData"]
            },
            "result": {
                "type": "string",
                "description": "The string holding json formatted app metadata.",
                "example": {
                    "xyz": "value1"
                }
            }
        },
        "setAppProperty": {
            "summary": "Sets a property for a given app",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "key": { "$ref": "#/definitions/propertyKey" },
                    "value": { "$ref": "#/definitions/propertyValue" }
                },
                "required": ["appId", "key", "value"]
            },
            "result": {
                "description": "Returns null on success or an error code string on failure.",
                "$ref": "#/common/results/void"
            }
        },
        "getAppProperty": {
            "summary": "Gets a property for a given app",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "key": { "$ref": "#/definitions/propertyKey" }
                },
                "required": ["appId", "key"]
            },
            "result": {
                "type": "string",
                "description": "The property value as a JSON string.",
                "example": "10"
            }
        },
        "getMaxRunningApps": {
            "summary": "Gets the maximum number of apps to maintain in the running or suspended state",
            "result": {
                "type": "object",
                "properties": {
                    "maxRunningApps": {
                        "type": "integer",
                        "description": "Maximum number of apps to maintain in the running or suspended state",
                        "example": 5
                    }
                },
                "required": ["maxRunningApps"]
            }
        }
    },
    "events": {
        "onAppInstalled": {
            "summary": "Triggered whenever the App is installed.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": {
                        "$ref": "#/definitions/appId"
                    },
                    "version": {
                        "$ref": "#/definitions/versionString"
                    }
                },
                "required": ["appId", "version"]
            }
        },
        "onAppUninstalled": {
            "summary": "Triggered whenever the App is uninstalled.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": {
                        "$ref": "#/definitions/appId"
                    }
                },
                "required": ["appId"]
            }
        },
        "onAppLifecycleStateChanged": {
            "summary": "Triggered whenever there is a change in the lifecycle state of a running app.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "appInstanceId": { "$ref": "#/definitions/appInstanceId" },
                    "newState": { "$ref": "#/definitions/AppLifecycleState" },
                    "oldState": { "$ref": "#/definitions/AppLifecycleState" },
                    "errorReason": { "$ref": "#/definitions/AppErrorReason" }
                },
                "required": ["appId", "appInstanceId", "newState", "oldState", "errorReason"]
            }
        },
        "onAppLaunchRequest": {
            "summary": "Triggered whenever there is a request for App Launch.",
            "params": {
                "type": "object",
                "properties": {
                    "appId": { "$ref": "#/definitions/appId" },
                    "intent": { "$ref": "#/definitions/intent" },
                    "source": {
                        "summary": "A string indicating the source of the intent",
                        "type": "string"
                    }
                },
                "required": [ "appId", "intent", "source" ]
            }
        },
        "onAppUnloaded": {
            "summary": "Triggered whenever the App is unloaded (terminated).",
            "params": {
                "type": "object",
                "properties": {
                    "appId":         { "$ref": "#/definitions/appId" },
                    "appInstanceId": { "$ref": "#/definitions/appInstanceId" }
                },
                "required": [ "appId", "appInstanceId" ]
            }
        }
    }
}

