{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/Thunder/master/Tools/JsonGenerator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "WebKitBrowser API",
        "class": "WebKitBrowser",
        "description": "The `WebKitBrowser` plugin provides web browsing functionality based on the WebKit engine."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
        "url":{
            "summary": "The URL",
            "type": "string",
            "example": "https://example.com"
        }
    },
    "properties": {
        "fps": {
            "summary": "Current number of frames-per-second the browser is rendering",
            "readonly": true,
            "params": {
                "type": "number",
                "example": 30
            }
        },
        "headers": {
            "summary": "Headers to send on all requests that the browser makes",
            "description": "Use this property to send on all requests that the browser makes.",
            "params": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "summary": "The header name",
                            "type": "string",
                            "example": "X-Forwarded-For"
                        },
                        "value": {
                            "summary": "The header value",
                            "type": "string",
                            "example": "::1"
                        }
                    },
                    "required": []
                }
            }
        },
        "httpcookieacceptpolicy": {
            "summary": "HTTP cookies accept policy",
            "description": "Use this property to accept HTTP cookie policy.",
            "params": {
                "type": "string",
                "enum": [
                    "always",
                    "never",
                    "onlyfrommaindocumentdomain",
                    "exclusivelyfrommaindocumentdomain"
                ],
                "example": "always"
            },
            "errors": [
                {
                    "description": "Unknown policy",
                    "$ref": "#/common/errors/unknownkey"
                }
            ]
        },
        "languages": {
            "summary": "User preferred languages",
            "description": "Use this property to return User preferred languages.",
            "params": {
                "type": "array",
                "items": {
                    "type": "string",
                    "example": "en-US"
                }
            }
        },
        "localstorageenabled":{
            "summary": "Local storage availability",
            "description": "Use this property to return Local storage availability.",
            "params": {
                "type": "boolean",
                "example": false
            }
        },
        "state": {
            "summary": "Running state of the service",
            "description": "Use this property to return the running state of the service.",
            "events": {
                "statechange" : "Triggered if the state of the service changes."
            },
            "params": {
                "type": "string",
                "enum": [
                    "resumed",
                    "suspended"
                ],
                "example": "resumed"
            }
        },
        "url": {
            "summary": "URL loaded in the browser",
            "description": "Use this property to load URL in the browser.",
            "events": {
                "urlchange" : "Triggered if the URL changes in the browser",
                "loadfinished" : "Triggered if the urlchange event returns true as URL loaded successfully",
                "loadfailed" : "Triggered if the urlchange event returns false as URL failed to load"
            },
            "params": {
                "type": "string",
                "example": "https://www.google.com"
            },
            "errors": [
                {
                    "description": "Incorrect URL given",
                    "$ref": "#/common/errors/incorrecturl"
                }
            ]
        },
        "useragent": {
            "summary": "`UserAgent` string used by the browser",
            "description": "Use this property to return `UserAgent` string used by the browser.",
            "params": {
                "type": "string",
                "example": "Mozilla/5.0 (Linux; x86_64 GNU/Linux) AppleWebKit/601.1 (KHTML, like Gecko) Version/8.0 Safari/601.1 WP"
            }
        },
        "visibility": {
            "summary": "Current browser visibility",
            "description": "Use this property to return visibilty status of current browser.",
            "events": {
                "visibilitychange" : "Triggered if the urlchange event returns false as URL failed to load"
            },
            "params": {
                "type": "string",
                "example": "visible"
            },
            "errors": [
                {
                    "description": "Returned when the operation is unavailable",
                    "$ref": "#/common/errors/unavailable"
                }
            ]           
        }
    },
    "methods": {
        "bridgeevent": {
            "summary": "Sends a legacy `$badger` event.",
            "params": {
                "summary": "A base64 encoded JSON string response to be delivered to the `window.$badger.event(handlerId, json)` method",
                "type": "string",
                "example": ""   
            },
            "result": {
                "$ref": "#/common/results/void"
            }
        },
        "bridgereply":{
            "summary": "A response for legacy `$badger`.",
            "params": {
                "summary": "A base64 encoded JSON string response to be delivered to the `$badger.callback(pid, success, json)` method",
                "type": "string",
                "example": ""   
            },
            "result": {
                "$ref": "#/common/results/void"
            }
        },
        "delete": {
            "summary": "Removes the contents of a directory recursively from the persistent storage.",
            "params": {
                "type": "object",
                "properties": {
                    "path": {
                        "description": "Path to directory (within the persistent storage) from which to delete contents",
                        "type": "string",
                        "example": ".cache/wpe/disk-cache"
                    }
                },
                "required": [
                    "path"
                ]
            },
            "result": {
                "$ref": "#/common/results/void"
            },
            "errors": [
                {
                    "description": "The given path was incorrect",
                    "$ref": "#/common/errors/unknownkey"
                }
            ]
        }
    },
    "events": {
        "bridgequery": {
            "summary": "A Base64 encoded JSON message from legacy `$badger` bridge",
            "params": {
                "type":"string",
                "example": ""
            }    
        },
        "loadfailed": {
            "summary": "Triggered when the browser fails to load a page",
            "params": {
                "type":"object",
                "properties": {
                    "url":{
                        "$ref": "#/definitions/url"
                    }
                },
                "required": [
                    "url"
                ]
            }
        },
        "loadfinished": {   
            "summary": "Triggered when the initial HTML document has been completely loaded and parsed",
            "params": {
                "type":"object",
                "properties": {
                    "url":{
                        "$ref": "#/definitions/url"
                    },
                    "httpstatus": {
                        "summary": "The response code of main resource request",
                        "type": "integer",
                        "example": 200
                    }
                },
                "required": [
                    "url",
                    "httpstatus"
                ]
            }
        },
        "pageclosure": {
            "summary": "Triggered when the web page requests to close its window"
        },
        "statechange": {
            "summary": "Triggered when the state of the service changes",
            "params": {
                "type":"object",
                "properties": {
                    "suspended": {
                        "summary": "`true` if the service has entered a suspended state  or `false` if the service has entered a resumed state",
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "suspended"
                ]
            }
        },
        "urlchange": {
            "summary": "Triggered when the URL changes in the browser",
            "params": {
                "type":"object",
                "properties": {
                    "url":{
                        "$ref": "#/definitions/url"
                    },
                    "loaded": {
                        "summary": "`true` if the URL has been loaded or `false` if the URL change has been requested",
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "url",
                    "loaded"
                ]
            }
        },	
        "visibilitychange": {
            "summary": "Triggered when the browser visibility changes",
            "params": {
                "type":"object",
                "properties": {
                    "hidden": {
                        "summary": "`true` if the browser has been hidden or `false` if the browser is made visible",
                        "type": "boolean",
                        "example": false
                    }
                },
                "required": [
                    "hidden"
                ]
            }
        }	
    }
}
