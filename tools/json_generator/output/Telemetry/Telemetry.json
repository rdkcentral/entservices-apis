{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/rdkservices/main/Tools/json_generator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "title": "Telemetry API",
        "class": "Telemtry",
        "description": "The `Telemetry` plugin allows you to persist event data for monitoring applications."
    },
    "common": {
        "$ref": "../common/common.json"
    },
    "definitions": {
 
    },
    "methods": {
        "setReportProfileStatus": {
            "summary": "Sets the status of telemetry reporting",
            "params": {
                "type": "object",
                "properties": {
                    "status": {
                        "summary": "The report status",
                        "type":"string",
                        "enum": [
                            "STARTED",
                            "COMPLETE"
                        ],
                        "example": "STARTED"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "logApplicationEvent": {
            "summary": "Logs an application event",
            "params": {
                "type": "object",
                "properties": {
                    "eventName": {
                        "summary": "The event name",
                        "type":"string",
                        "example": ""
                    },
                    "eventValue": {
                        "summary": "The event value",
                        "type":"string",
                        "example": ""
                    }
                },
                "required": [
                    "eventName",
                    "eventValue"
                ]
            },
            "result": {
                "$ref": "#/common/result"
            }
        },
        "uploadReport": {
            "summary": "Triggers processing and uploading of telemetry report for legacy Xconf based configuration",
            "events": {
                "onReportUpload" : "Triggered by callback from Telemetry after report uploading"
            },

            "result": {
                "$ref": "#/common/results/void"
            },
            "errors": [
                {
                    "description": "RBus call report uploading failed",
                    "$ref": "#/common/errors/rpccallfailed"
                },
                {
                    "description": "Failed to open RBus handle",
                    "$ref": "#/common/errors/openingfailed"
                },
                {
                    "description": "Built with no support for RBus",
                    "$ref": "#/common/errors/notexist"
                }
            ]
        },
        "abortReport": {
            "summary": "Makes request to Telemetry service to abort report upload",
            "result": {
                "$ref": "#/common/results/void"
            },
            "errors": [
                {
                    "description": "RBus call report uploading failed",
                    "$ref": "#/common/errors/rpccallfailed"
                },
                {
                    "description": "Failed to open RBus handle",
                    "$ref": "#/common/errors/openingfailed"
                },
                {
                    "description": "Built with no support for RBus",
                    "$ref": "#/common/errors/notexist"
                }
            ]
        }
    },
    "events":{
        "onReportUpload": {
            "summary": "Triggered by callback from Telemetry after report uploading",
            "params": {
                "type": "object",
                "properties": {
                    "telemetryUploadStatus":{
                        "summary": "Indicates if the upload was successful",
                        "type": "string",
                        "example": "UPLOAD_SUCCESS"
                    }
                },
                "required": [
                    "telemetryUploadStatus"
                ]
            }
        }
    }
}
